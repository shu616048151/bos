package bos.base.dao;

import java.io.Serializable;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.List;

import javax.annotation.Resource;

import org.apache.poi.poifs.storage.BATBlock.BATBlockAndIndex;
import org.hibernate.SessionFactory;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;


public class iBaseDaoImpl<T> extends HibernateDaoSupport implements iBaseDao<T>{
	

	private Class<T> entityclass;
	public iBaseDaoImpl() {
		Type genType = getClass().getGenericSuperclass();
		Type[] actualTypeArguments = ((ParameterizedType)genType).getActualTypeArguments();
		entityclass=(Class<T>) actualTypeArguments[0];
	}
	//从applicationcontext.xml中注入sessionfactory
	@Resource
	public void setSessionFactoty(SessionFactory sessionFactory){
		super.setSessionFactory(sessionFactory);
	}
	@Override
	public void save(T entity) {
		this.getHibernateTemplate().save(entity);
		
	}

	@Override
	public void delete(T entity) {
		this.getHibernateTemplate().delete(entity);
		
	}

	@Override
	public void update(T entity) {
		this.getHibernateTemplate().update(entity);
		
	}

	@Override
	public T findById(Serializable id) {
		return this.getHibernateTemplate().get(entityclass, id);
	}
	@Override
	public List<T> findAll() {
		String hql="from "+entityclass.getSimpleName();
		return (List<T>) this.getHibernateTemplate().find(hql);
	}

}
